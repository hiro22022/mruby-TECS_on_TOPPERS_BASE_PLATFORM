#
#		Makefile のターゲット依存部（stm32h743_nucleo144用）
#

#
#  ボード名，プロセッサ名，開発環境名の定義
#
BOARD = stm32h743nucleo144_gcc
CHIP  = stm32h7xx
PRC   = arm_m
TOOL  = gcc

#
#  実行環境の定義
#
ifeq ($(DBGENV),)
DBGENV = RAM
endif

#
#  FPUの方式
#
#FPU_USAGE := FPU_NO_PRESERV
#FPU_USAGE := FPU_NO_LAZYSTACKING
FPU_USAGE := FPU_LAZYSTACKING
FPU_ARCH_MACRO := __TARGET_FPU_FPV5_DP
FPU_ABI := hard

#
#  最適化したくない場合はtrueに定義
#
#OMIT_OPTIMIZATION = true

#
#  コンパイルオプション
#
INCLUDES := $(INCLUDES) -I$(TARGETDIR)
COPTS := $(COPTS) 
LDFLAGS := $(LDFLAGS)

#
#  カーネルに関する定義
#
KERNEL_DIR := $(KERNEL_DIR) $(TARGETDIR)
KERNEL_ASMOBJS := $(KERNEL_ASMOBJS)
KERNEL_COBJS := $(KERNEL_COBJS)

#
#  システムサービスに関する定義
#
SYSSVC_DIR := $(SYSSVC_DIR) $(TARGETDIR)
SYSSVC_COBJS := $(SYSSVC_COBJS) target_inithook.o

#
#  トレースログに関する設定
#
ifeq ($(ENABLE_TRACE),true)
      COPTS := $(COPTS) -DTOPPERS_ENABLE_TRACE
      KERNEL_DIR := $(KERNEL_DIR) $(SRCDIR)/arch/logtrace
      KERNEL_COBJS := $(KERNEL_COBJS) trace_config.o trace_dump.o
endif

#
#  GNU開発環境のターゲットアーキテクチャの定義
#
GCC_TARGET = arm-none-eabi

#
#  シリアルポートの定義
#
COPTS := $(COPTS) -DSIO_PORTID=1

#
#  依存関係の定義
#
kernel_cfg.timestamp: $(TARGETDIR)/target.tf
$(OBJFILE): $(TARGETDIR)/target_check.tf

# 
#  オフセットファイル生成のための定義 
# 
OFFSET_TF := $(TARGETDIR)/target_offset.tf

#
#  チップ依存部のインクルード
#
include $(SRCDIR)/arch/$(PRC)_$(TOOL)/$(CHIP)/Makefile.chip

