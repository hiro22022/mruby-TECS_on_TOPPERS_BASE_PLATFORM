/*
 *  $Id: mdcard_check.cfg 2416 2017-04-05 17:18:18Z roi $
 */

/*
 *  £Í£ä£ð£ì£á£ù£å£ò¤Î¥·¥¹¥Æ¥à¥³¥ó¥Õ¥£¥®¥å¥ì¡¼¥·¥ç¥ó¥Õ¥¡¥¤¥ë
 */
INCLUDE("target_timer.cfg");
INCLUDE("syssvc/syslog.cfg");
INCLUDE("syssvc/banner.cfg");
INCLUDE("syssvc/serial.cfg");
INCLUDE("syssvc/logtask.cfg");
INCLUDE("syssvc/tlsf.cfg");
INCLUDE("pdic/stm32f7xx/device.cfg");
INCLUDE("pdic/stm32f7xx/sdmmc.cfg");
INCLUDE("usb/host/tusbh.cfg");
INCLUDE("files/storagedevice.cfg");
INCLUDE("files/ff/fatfs.cfg");
INCLUDE("monitor/monitor.cfg");

#include "device.h"
#include "mdcard_play.h"

ATT_INI({ TA_NULL, 0, device_info_init });
ATT_INI({ TA_NULL, sw_handle, setup_sw_func });
ATT_INI({ TA_NULL, heap_param, heap_init });
ATT_INI({ TA_NULL, 0, msc_init });

CRE_SEM(I2CTRS_SEM, { TA_TPRI, 0, 1 });
CRE_SEM(I2CLOC_SEM, { TA_TPRI, 1, 1 });
CRE_FLG(AUDIO_FLG,{TA_CLR | TA_WMUL, 0});
CRE_FLG(SCAN_FLG,{TA_CLR, 0});

CRE_TSK(MAIN_TASK, { TA_ACT, 0, main_task, MAIN_PRIORITY, STACK_SIZE, NULL });
CRE_TSK(AUDIO_TASK, { TA_NULL, 0, audio_task, AUDIO_PRIORITY, (STACK_SIZE*4), NULL });
CRE_TSK(SCAN_TASK, { TA_NULL, 0, scan_task, AUDIO_PRIORITY, STACK_SIZE, NULL });

DEF_INH(INHNO_LTDC, { TA_NULL, ltdc_handler });
CFG_INT(INTNO_LTDC, { TA_ENAINT | INTATR_LTDC, INTPRI_LTDC });

DEF_INH(INHNO_DSI, { TA_NULL, dsi_handler });
CFG_INT(INTNO_DSI, { TA_ENAINT | INTATR_DSI, INTPRI_DSI });

DEF_INH(INHNO_DFSDM1F0, { TA_NULL, dfsdm1fl0_handler });
CFG_INT(INTNO_DFSDM1F0, { TA_ENAINT | INTATR_DFSDM1F0, INTPRI_DFSDM1F0 });

DEF_INH(INHNO_DFSDM1F1, { TA_NULL, dfsdm1fl1_handler });
CFG_INT(INTNO_DFSDM1F1, { TA_ENAINT | INTATR_DFSDM1F1, INTPRI_DFSDM1F1 });

DEF_INH(INHNO_DFSDM1F2, { TA_NULL, dfsdm1fl2_handler });
CFG_INT(INTNO_DFSDM1F2, { TA_ENAINT | INTATR_DFSDM1F2, INTPRI_DFSDM1F2 });

DEF_INH(INHNO_DFSDM1F3, { TA_NULL, dfsdm1fl3_handler });
CFG_INT(INTNO_DFSDM1F3, { TA_ENAINT | INTATR_DFSDM1F3, INTPRI_DFSDM1F3 });

ATT_ISR({TA_NULL, I2C1_PORTID, INTNO_I2C1EV, i2c_ev_isr, 1 });
CFG_INT(INTNO_I2C1EV, { TA_ENAINT | INTATR_I2C1EV, INTPRI_I2C1EV });
ATT_ISR({TA_NULL, I2C1_PORTID, INTNO_I2C1ER, i2c_er_isr, 1 });
CFG_INT(INTNO_I2C1ER, { TA_ENAINT | INTATR_I2C1ER, INTPRI_I2C1ER });

ATT_ISR({TA_NULL, I2C4_PORTID, INTNO_I2C4EV, i2c_ev_isr, 1 });
CFG_INT(INTNO_I2C4EV, { TA_ENAINT | INTATR_I2C4EV, INTPRI_I2C4EV });
ATT_ISR({TA_NULL, I2C4_PORTID, INTNO_I2C4ER, i2c_er_isr, 1 });
CFG_INT(INTNO_I2C4ER, { TA_ENAINT | INTATR_I2C4ER, INTPRI_I2C4ER });

ATT_ISR({TA_NULL, DMA2STM1_SID, INTNO_DMAS21, stream_dma_isr, 1 });
CFG_INT(INTNO_DMAS21, { TA_ENAINT | INTATR_DMAS21, INTPRI_DMAS21 });

ATT_ISR({TA_NULL, DMA2STM3_SID, INTNO_DMAS23, stream_dma_isr, 1 });
CFG_INT(INTNO_DMAS23, { TA_ENAINT | INTATR_DMAS23, INTPRI_DMAS23 });

ATT_ISR({TA_NULL, DMA2STM4_SID, INTNO_DMAS24, stream_dma_isr, 1 });
CFG_INT(INTNO_DMAS24, { TA_ENAINT | INTATR_DMAS24, INTPRI_DMAS24 });

ATT_ISR({TA_NULL, DMA2STM6_SID, INTNO_DMAS26, stream_dma_isr, 1 });
CFG_INT(INTNO_DMAS26, { TA_ENAINT | INTATR_DMAS26, INTPRI_DMAS26 });

ATT_ISR({TA_NULL, DMA2STM7_SID, INTNO_DMAS27, stream_dma_isr, 1 });
CFG_INT(INTNO_DMAS27, { TA_ENAINT | INTATR_DMAS27, INTPRI_DMAS27 });

ATT_ISR({TA_NULL, USB2_PORTID, INTNO_USBHS, usb_otg_isr, 1 });
CFG_INT(INTNO_USBHS, { TA_ENAINT | INTATR_USBHS, INTPRI_USBHS });

ATT_ISR({TA_NULL, USB2_PORTID, INTNO_HSWKUP, usb_otg_wkup_isr, 1 });
CFG_INT(INTNO_HSWKUP, { TA_ENAINT | INTATR_HSWKUP, INTPRI_HSWKUP });

